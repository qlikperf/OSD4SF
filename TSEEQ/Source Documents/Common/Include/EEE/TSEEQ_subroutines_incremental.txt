sub IncrementalBlock1
/**********************************************************************************************************************************************************
	File:		SEEQ_subroutines_incremental.txt
	Purpose:	Extract, Transform and Load tables as specified in the table specified by the variable vRulesSourceFile.
			Subroutines in this file are called from SEEQ_include.txt
	
	Author:		Jeff R. Robbins
	Email:		jrs@qlik.com; jr@QlikPerf.com
	
	Version:	3.1.7
	Date:		2018-12-09
	
	This program is provided in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
**********************************************************************************************************************************************************/
//	Trace 'Entering subroutine IncrementalBlock1 in $(vCommonScriptPath)eee\SEEQ_subroutines_incremental.txt';
   	LET vSEEQ_TimeIncrementalPreProccessing = num(now(1));		// performance profiling

	LET vSEEQAddOnFileSize=FileSize('$(vCommonScriptPath)EEE\add-ons\QCEE Incremental1.txt');
//	trace $(vSEEQAddOnFileSize);
	IF  vSEEQAddOnFileSize > 0 THEN
		$(Include=$(vCommonScriptPath)\eee\add-ons\QCEE Incremental1.txt);			
	ELSE
//		exit SCRIPT;
		IF len(trim(vSEEQ_Constraints))>0 AND left(vSEEQ_Constraints, 2) <> '//'THEN
			LET vSEEQ_Constraints = 'WHERE  $(vSEEQ_Constraints)';
		ENDIF
		IF upper(vSEEQ_IncrementalLoadType) <> 'FULL' AND upper(vPurpose) = 'EXTRACT'  THEN
			Call SEEQ_WriteMessage ('QCEE Incremental1 add-on for TSEEQ was not found.  Please contact Qlik Consulting at QlikConsultingUSA@qlik.com for assistance with this add-on.');
			CALL SEEQ_WriteMessage('Switching from $(vSEEQ_IncrementalLoadType) to FULL load.');
			SET vSEEQ_IncrementalLoadType = 'FULL';		
		ENDIF
	ENDIF
	SET vSEEQAddOnFileSize=;
	LET vSEEQ_TimeIncrementalPreProccessing = num(now(1)) -  vSEEQ_TimeIncrementalPreProccessing;		// performance profiling
//	Call SEEQ_WriteMessage ('Exiting subroutine IncrementalBlock1 in $(vCommonScriptPath)eee\SEEQ_subroutines_incremental.txt');		
//	Trace 'Exiting subroutine IncrementalBlock1 in $(vCommonScriptPath)\eee\SEEQ_subroutines_incremental.txt';	
end sub	// IncrementalBlock1
/******************************************************************************************************************************************/
sub IncrementalBlock2
//	Trace 'Entering subroutine IncrementalBlock2 in $(vCommonScriptPath)\eee\SEEQ_subroutines_incremental.txt';	
	LET vSEEQ_TimeIncrementalPostProccessing = num(now(1));		// performance profiling
	IF FileSize('$(vCommonScriptPath)\eee\add-ons\qcee incremental2.txt') > 0 THEN
		$(Include=$(vCommonScriptPath)\eee\add-ons\qcee incremental2.txt);
	ENDIF 
	SET vSEEQ_Incremental_QVD_AlreadyExists	= '';
	SET vSEEQ_TargetFolderAndTarget = '';	
	LET vSEEQ_TimeIncrementalPostProccessing = num(now(1)) -  vSEEQ_TimeIncrementalPostProccessing;
//	Trace 'Exiting subroutine IncrementalBlock2 in $(vCommonScriptPath)\eee\SEEQ_subroutines_incremental.txt';	
end sub	// IncrementalBlock2
/******************************************************************************************************************************************/
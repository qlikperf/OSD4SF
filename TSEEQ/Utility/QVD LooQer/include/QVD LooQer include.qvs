/**********************************************************************************************************************************************************
	File:				QVD LooQer include.qvs
	
	Included by:		QVD LooQer v2 include.qvw
	
	Purpose:			This script reads a recursively reads a folder to generate a list of all QVDs within. The user may then select any one of the QVDs
						to view the QVD contents in a table box.  A macro automatically generates the table box based on field names found within the 
						selected QVD. 
								
	Author:		Jeff R. Robbins
	Email:		jrs@qlik.com; jr@QlikPerf.com
	
	Version:	3.1.7
	Date:		2018-12-11

	This program is provided in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
**********************************************************************************************************************************************************/
SET vQVDLoaded = 0;

QVDsToExclude:		// Exclude metadata QVDs from the available list of QVDs to open. 
LOAD * Inline [
QVDToExclude
AllFields_List.qvd
QVD_List.qvd
];


LET vDirectoryToSearch=trim(vDirectoryToSearch);
IF Right(vDirectoryToSearch, 1) <> '\' THEN		// append trailing backslash if it's not present.
	SET vDirectoryToSearch=$(vDirectoryToSearch)\;
ENDIF

LET vLastQVD_ListRefresh = QvdCreateTime('$(vTmpFolder)\QVD_List.qvd');		// See if a QVD list was already created.
IF IsNull(vLastQVD_ListRefresh) THEN
	LET  vLastQVD_ListRefresh = 0;
ENDIF

IF '$(vAction)' ='ReloadQVDList' OR vLastQVD_ListRefresh = 0 THEN 		// traverse folder to find all QVDs.
		sub DoDir (Root)
			for each File in filelist (Root&'\*.*')
				QVD_List:
//				LOAD
//					*,
////					ShortDir & '\' & QVD AS ShortDirAndQVD,
//					IF (SubField(Dir, '\', -1) = 'PRD' OR SubField(Dir, '\', -1) = 'CPY', SubField(Dir, '\', -1)) AS Environment
//				;
				LOAD
					replace( '~' &right('$(Root)',  len('$(Root)') -  Index('$(Root)', '\', $(vNumDirectorySegmentsToRemove) ) )  , '\\', '\' )  AS ShortDir,				
					replace( '~' &right('$(File)',  len('$(File)') -  Index('$(File)', '\', $(vNumDirectorySegmentsToRemove) ) ) , '\\', '\' )   AS ShortDirAndQVD,				
					'$(Root)' AS [Original Root],
					 SubField('$(File)', '\', -1) as [QVD To Open] ,
					replace('$(Root)', '\\', '\') AS Dir,
					FileTime('$(File)') AS [QVD Timestamp],
					replace('$(File)', '\\', '\') AS DirAndQVD
					AutoGenerate 1
					WHERE WildMatch('$(File)', '*.QVD') AND NOT WildMatch('$(File)', $(vExcludeString) ) and not Exists(QVDToExclude ,SubField('$(File)', '\', -1) )		;

				if right(upper('$(File)'), 3 ) = 'QVD' AND NOT WildMatch('$(File)', $(vExcludeString)) THEN
					AllFields_List:
					LOAD 
						CreatorDoc,
						FieldName AS [Field Name],
						replace('$(File)', '\\', '\') AS DirAndQVD
					FROM [$(File)] (XmlSimple, Table is [QvdTableHeader/Fields/QvdFieldHeader]);
				ENDIF
			next File
				
			for each Dir in dirlist (Root&'\*' )
				call DoDir ('$(Dir)')
			Next Dir
		end sub

		call DoDir ('$(vDirectoryToSearch)');

		LET vNumQVDs = NoOfRows('QVD_List');
		IF vNumQVDs > 0 THEN
				STORE QVD_List INTO $(vTmpFolder)\QVD_List.qvd (qvd);
				STORE AllFields_List INTO $(vTmpFolder)\AllFields_List.qvd (qvd);
		ENDIF
ENDIF	


DROP Table QVDsToExclude;	

IF  '$(vAction)' = 'ReloadSelectedQVD' THEN
	_QVD_List:
	LOAD * FROM $(vTmpFolder)\QVD_List.qvd (qvd);			// reload cached list of available QVDs
	_AllFields_List:
	LOAD * FROM $(vTmpFolder)\AllFields_List.qvd (qvd);		// reload cached list of available fields
	IF 	'$(vMaxRowsToFetch)' = 'ALL' THEN
		 SET vLoadPrefix = ''	;
	ELSE 
		 LET vLoadPrefix = 'First ' & num(vMaxRowsToFetch) & ' '	;
	ENDIF
		NoConcatenate $(vLoadPrefix) 	LOAD * FROM [$(vQVDtoLoad)] (qvd);	// Load the actual QVD contents.
		SET vQVDLoaded = 1;
ELSE	
	EXIT Script;	 
END IF

// 2018-09-16 JRR commented the following line:
// LET vLoadedQVD = replace(replace( '$(vQVDtoLoad)', '$(vDirectoryPortionToHide)' , '~\'), '\\', '\')  ; //& 	 SubField('$(vQVDtoLoad)', '\', -1) ;
LET vLoadedQVD = replace( '~' &right('$(vQVDtoLoad)',  len('$(vQVDtoLoad)') -  Index('$(vQVDtoLoad)', '\', $(vNumDirectorySegmentsToRemove) ) ) , '\\', '\' );

LET vTableName = left(replace(replace( SubField('$(vQVDtoLoad)', '\', -1), '.qvd', ''), '.QVD', ''), 48);  // Some Qlik product versions limit table names to 48 characters.

LET vNoOfFields = NoOfFields('$(vTableName)') ;
Trace '$(vNoOfFields)';
LET vNoOfRows = NoOfRows('$(vTableName)') ;
//EXIT SCRIPT;

FOR i = 1 to vNoOfFields
	LET vFieldName = FieldName(i, vTableName);
	FieldNames:
	LOAD
			'$(vFieldName)' AS FieldName
	AutoGenerate 1;
NEXT